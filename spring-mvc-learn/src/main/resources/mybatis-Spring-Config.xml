<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
    <context:component-scan base-package="cn.joey"/>
    <mvc:annotation-driven/>
	<mvc:resources mapping="/images/*" location="/images/"/>
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://cloud.sinosoft-open.com:3306/ics_cbs_calengine"/>
		<property name="username" value="ics_cbs_calengine"/>
		<property name="password" value="ics_cbs_calengine"/>
	</bean>
	<!--生成SqlSessionFactory对象-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="myDataSource"/>
		<property name="mapperLocations" value="classpath:cn/joey/mvc/entity/*.xml"/>
	</bean>
	<!-- 按指定包和注解标记扫描Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.joey.mvc"/>
		<property name="annotationClass" value="cn.joey.mvc.annotation.MyBatisRepository"/>
	</bean>
	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
		<!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>-->
		<!--<property name="prefix" value="/jsp/"></property>-->
		<!--<property name="suffix" value=".jsp"></property>-->
		<!--<property name="order" value="2"/>-->
	<!--</bean>-->
	<!--Thymeleaf模板是原生的，不依赖标签库。它能在接收原始HTML的地方进行编辑和渲染-->
	<bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<!--<property name="prefix" value="/views/" />-->
		<property name="suffix" value=".html"/>
		<!--HTML是默认值，为了清楚起见，在此处添加-->
		<property name="templateMode" value="HTML"/>
		<!--默认情况下，模板缓存为true，可以设置为false-->
		<property name="cacheable" value="false"/>
		<property name="characterEncoding" value="UTF-8"/>
	</bean>
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver"/>
		<!-- 使用Spring 4.2.4或更高版本启用Spring EL编译器 -->
		<!-- 可以加快大多数情况下的执行速度, 但是当一个模板中 -->
		<!-- 的表达式在不同数据类型之间重用时, -->
		<!-- 可能与特定情况不兼容, 因此该标志默认为“false” -->
		<!-- 以实现更安全的向后兼容性。 -->
		<!--<property name="enableSpringELCompiler" value="true"/>-->
	</bean>

	<!--<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">-->
		<!--<property name="templateEngine" ref="templateEngine"/>-->
		<!--<property name="characterEncoding" value="UTF-8"/>-->
	<!--</bean>-->
	<!--配置多个视图解析-->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="viewResolvers">
			<list>
				<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
					<property name="templateEngine" ref="templateEngine"/>
					<property name="order" value="1"/>
					<!--<property name="viewNames" value="*.html"/>-->
					<property name="viewNames" value="views/*"/>
				</bean>
				<!-- used jsp -->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<!--<property name="prefix" value="/jsp/"/>-->
					<property name="suffix" value=".jsp"/>
					<property name="order" value="2" />
					<!--<property name="viewNames" value="*.jsp"/>-->
					<property name="viewNames" value="jsp/*"/>
				</bean>
			</list>
		</property>
	</bean>
</beans>